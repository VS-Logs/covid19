{"version":3,"sources":["Question/Question.js","App.js","serviceWorker.js","index.js"],"names":["Question","props","childrenClass","useState","selectionClass","state","newState","selectionHandler","evt","selectionOption","target","value","persist","setTimeout","checked","changeQuestionHandler","undefined","children","visibleClass","className","src","alt","question","quest","type","name","onChange","a","b","c","d","App","score","questions","answersKey","id","answers","nextState","length","filter","answer","index","str","i","chr","hash","charCodeAt","hasher","push","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30356d16.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Question.css\";\r\n\r\nfunction Question(props) {\r\n  const [state, newState] = useState({\r\n    selectionClass: \"box\"\r\n  });\r\n\r\n  function selectionHandler(evt) {\r\n    newState({\r\n      selectionClass: \"box answer-selected\",\r\n      selectionOption: evt.target.value\r\n    });\r\n\r\n    evt.persist();\r\n    setTimeout(() => {\r\n      evt.target.checked = false;\r\n      props.changeQuestionHandler(evt.target.value);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      newState({\r\n        selectionClass: \"box\"\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  var childrenClass\r\n  if(props.children !== undefined){\r\n    var visibleClass = 'hidden';\r\n    childrenClass = 'result';\r\n  }\r\n  else{\r\n    childrenClass = 'hidden-display';\r\n  }\r\n\r\n  return (\r\n    <div className={state.selectionClass}>\r\n      <img src=\"corona.png\" alt=\"corona\" className=\"corona-bottom-right\" />\r\n      <div className={childrenClass}>\r\n        Thanks for participating in the quiz.<br/>\r\n        Your score is {props.children} out of 10\r\n      </div>\r\n\r\n      <div className={visibleClass}>\r\n        <h2>{props.question.quest}</h2>\r\n        <div className=\"margin-10\">\r\n          <div className=\"align-v-middle w-50 inline-block\">\r\n            <input type=\"radio\" name=\"answer\" value=\"a\" onChange={selectionHandler} />\r\n          </div>\r\n          <div className=\"align-v-middle w-rest inline-block\">{props.question.a}</div>\r\n        </div>\r\n\r\n        <div className=\"margin-10\">\r\n          <div className=\"align-v-middle w-50 inline-block\">\r\n            <input type=\"radio\" name=\"answer\" value=\"b\" onChange={selectionHandler} />\r\n          </div>\r\n          <div className=\"align-v-middle w-rest inline-block\">{props.question.b}</div>\r\n        </div>\r\n\r\n        <div className=\"margin-10\">\r\n          <div className=\"align-v-middle w-50 inline-block\">\r\n            <input type=\"radio\" name=\"answer\" value=\"c\" onChange={selectionHandler} />\r\n          </div>\r\n          <div className=\"align-v-middle w-rest inline-block\">{props.question.c}</div>\r\n        </div>\r\n\r\n        <div className=\"margin-10\">\r\n          <div className=\"align-v-middle w-50 inline-block\">\r\n            <input type=\"radio\" name=\"answer\" value=\"d\" onChange={selectionHandler} />\r\n          </div>\r\n          <div className=\"align-v-middle w-rest inline-block\">{props.question.d}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Question from \"./Question/Question\";\n\nfunction App() {\n  var questions = [\n    {\n      quest: \"1. Where did the first Covid-19 outbreak happen?\",\n      a: \"Newyork, USA\",\n      b: \"Wuhan, China\",\n      c: \"Shanghai, China\",\n      d: \"Beijing, China\"\n    },\n    {\n      quest: \"2. When did WHO declare Covid-19 as pandemic?\",\n      a: \"17 Mar 2020\",\n      b: \"16 Mar 2020\",\n      c: \"11 Mar 2020\",\n      d: \"9 Mar 2020\"\n    },\n    {\n      quest: \"3. What is the incubation period for Covid 19?\",\n      a: \"2-14 days\",\n      b: \"1-10 days\",\n      c: \"5-15 days\",\n      d: \"0-15 days\"\n    },\n    {\n      quest: \"4. What is the minimum distance to be maintained in public places in between 2 people?\",\n      a: \"5 ft\",\n      b: \"3 ft\",\n      c: \"6 ft\",\n      d: \"4 ft\"\n    },\n    {\n      quest: \"5. which are the mode of transmission?\",\n      a: \"Air\",\n      b: \"Different surfaces\",\n      c: \"Both A and B\",\n      d: \"Water\"\n    },\n    {\n      quest: \"6. How long does the virus stay in Air?\",\n      a: \"2 hrs\",\n      b: \"5 hrs\",\n      c: \"4 hrs\",\n      d: \"3 hrs\"\n    },\n    {\n      quest: \"7. What are the clinical features observed in Covid 19 patients?\",\n      a: \"Dry Cough, Fever, Shortness of breath\",\n      b: \"Pain in abdomen, vomitting, diarrhea\",\n      c: \"Fever, vomitting, fatigue\",\n      d: \"Fever, cold, cough\"\n    },\n    {\n      quest: \"8. What is helpline number to report about Covid 19 symptoms given by Government of India?\",\n      a: \"1075 +91-11-23978046\",\n      b: \"1075 +91-11-2197707\",\n      c: \"1075 +91-11-2309009\",\n      d: \"1075 +91-11-23458791\"\n    },\n    { \n      quest: \"9. Which is the recommended mask for Covid 19?\", \n      a: \"Surgical mask\", \n      b: \"FFP1 mask\", \n      c: \"N95 mask\", \n      d: \"Cloth mask\" \n    },\n    {\n      quest: \"10. What are preventive measures suggested for Covid 19?\",\n      a: \"HANDS-Wash them often ELBOW-Cough into it, FACE -Don't touch it\",\n      b: \"SPACE-Keep safe distance, HOME-Stay if you can\",\n      c: \"All of the above\",\n      d: \"None of the above\"\n    }\n  ];\n  var answersKey = [175667596, -658731874, -1296971367, 1642744, 516595227, 48156476, 769360365, -196076807, -808546037, -128829340];\n\n  var [state, nextState] = useState({\n    id: 0,\n    answers: []\n  });\n  var score;\n\n  function changeQuestionHandler(answer) {\n    state.answers.push(answer);\n\n    if (state.id !== answersKey.length - 1) {\n      nextState({\n        id: state.id + 1,\n        answers: state.answers\n      });\n    } else {\n      nextState({\n        id: state.id,\n        answers: state.answers\n      });\n    }\n  }\n\n  function checkScore() {\n    var ans = state.answers.filter((answer, index) => {\n      return answersKey[index] === hasher(questions[index][answer]);\n    });\n    return ans.length;\n  }\n\n  function hasher(str) {\n    var hash = 0,\n      i,\n      chr;\n    for (i = 0; i < str.length; i++) {\n      chr = str.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0;\n    }\n    return hash;\n  }\n\n  if (state.answers.length === answersKey.length) {\n    score = checkScore();\n  }\n\n  return (\n    <div className=\"App\">\n      <Question question={questions[state.id]} changeQuestionHandler={changeQuestionHandler}>\n        {score}\n      </Question>\n      <img src=\"virus.png\" alt=\"virus\" className=\"virus1\" />\n      <img src=\"virus.png\" alt=\"virus\" className=\"virus2\" />\n      <img src=\"virus.png\" alt=\"virus\" className=\"virus3\" />\n      <div className=\"bottom-right-fixed\">\n        Developed in React<br/>\n        by <a href=\"https://www.linkedin.com/in/sadananadpai/\">Sadanand Akshay Pai</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}